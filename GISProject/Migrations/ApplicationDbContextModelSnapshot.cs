// <auto-generated />
using System;
using GISProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GISProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GISProject.Models.PointOfInterest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Geometry>("Geometry")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PointsOfInterest");
                });

            modelBuilder.Entity("GISProject.Models.PointOfInterestCategory", b =>
                {
                    b.Property<long>("PointOfInterestId")
                        .HasColumnType("bigint");

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.HasKey("PointOfInterestId", "Category");

                    b.ToTable("PointOfInterestCategory");
                });

            modelBuilder.Entity("GISProject.Models.Trail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Difficulty")
                        .HasColumnType("integer");

                    b.Property<double?>("EstimatedLengthMeters")
                        .HasColumnType("double precision");

                    b.Property<Geometry>("Geometry")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TrailType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Trails");
                });

            modelBuilder.Entity("GISProject.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Point>("CurrentLocation")
                        .HasColumnType("geometry");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PointOfInterestTrail", b =>
                {
                    b.Property<long>("PointsOfInterestId")
                        .HasColumnType("bigint");

                    b.Property<long>("TrailsId")
                        .HasColumnType("bigint");

                    b.HasKey("PointsOfInterestId", "TrailsId");

                    b.HasIndex("TrailsId");

                    b.ToTable("TrailPointOfInterest", (string)null);
                });

            modelBuilder.Entity("GISProject.Models.PointOfInterestCategory", b =>
                {
                    b.HasOne("GISProject.Models.PointOfInterest", "PointOfInterest")
                        .WithMany("PoiCategories")
                        .HasForeignKey("PointOfInterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PointOfInterest");
                });

            modelBuilder.Entity("GISProject.Models.Trail", b =>
                {
                    b.HasOne("GISProject.Models.User", "CreatedByUser")
                        .WithMany("CreatedTrails")
                        .HasForeignKey("CreatedByUserId");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("PointOfInterestTrail", b =>
                {
                    b.HasOne("GISProject.Models.PointOfInterest", null)
                        .WithMany()
                        .HasForeignKey("PointsOfInterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GISProject.Models.Trail", null)
                        .WithMany()
                        .HasForeignKey("TrailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GISProject.Models.PointOfInterest", b =>
                {
                    b.Navigation("PoiCategories");
                });

            modelBuilder.Entity("GISProject.Models.User", b =>
                {
                    b.Navigation("CreatedTrails");
                });
#pragma warning restore 612, 618
        }
    }
}
