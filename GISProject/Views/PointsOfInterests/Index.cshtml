@model IEnumerable<dynamic>
@{
    ViewData["Title"] = "Mappa dei Punti di Interesse";
    var poiJson = System.Text.Json.JsonSerializer.Serialize(Model);
}

<h2>@ViewData["Title"]</h2>

<script src="https://cdn.jsdelivr.net/npm/ol@7.3.0/dist/ol.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ol@7.3.0/ol.css" />

<div id="map" style="width: 100%; height: 600px;"></div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const pois = @Html.Raw(poiJson);

        const features = pois
            .filter(p => typeof p.Longitude === 'number' && typeof p.Latitude === 'number')
            .map(poi => new ol.Feature({
                geometry: new ol.geom.Point(
                    ol.proj.fromLonLat([poi.Longitude, poi.Latitude])
                ),
                name: poi.Name
            }));

        const vectorSource = new ol.source.Vector({ features });

        const vectorLayer = new ol.layer.Vector({
            source: vectorSource,
            style: new ol.style.Style({
                image: new ol.style.Circle({
                    radius: 3,
                    fill: new ol.style.Fill({ color: 'green' }),
                    stroke: null // niente bordo per prestazioni migliori
                })
            })
        });

        const map = new ol.Map({
            target: 'map',
            layers: [
                new ol.layer.Tile({ source: new ol.source.OSM() }),
                vectorLayer
            ],
            view: new ol.View()
        });

        const extent = vectorSource.getExtent();
        if (!ol.extent.isEmpty(extent)) {
            map.getView().fit(extent, {
                padding: [50, 50, 50, 50],
                maxZoom: 14,
                duration: 500
            });
        } else {
            map.getView().setCenter(ol.proj.fromLonLat([12.5, 42.5]));
            map.getView().setZoom(6);
        }

        const overlay = new ol.Overlay({ element: document.createElement('div'), autoPan: true });
        map.addOverlay(overlay);

        map.on('click', function (evt) {
            const feature = map.forEachFeatureAtPixel(evt.pixel, f => f);
            if (feature) {
                const coordinate = evt.coordinate;
                const content = document.createElement('div');
                content.style.padding = "4px";
                content.style.backgroundColor = "white";
                content.style.border = "1px solid #ccc";
                content.innerHTML = `<strong>${feature.get('name')}</strong>`;
                overlay.setElement(content);
                overlay.setPosition(coordinate);
            }
        });
    });
</script>
